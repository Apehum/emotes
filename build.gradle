plugins{
    id 'java'
    id 'forgified-fabric-loom' version '0.7.0-SNAPSHOT' apply false //Forge loom :D
    id "architectury-plugin" version "3.0-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "7.0.0" apply false
    //id "com.dorongold.task-tree" version "1.5" Current version doesn't support gradle 6.8

    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.github.breadmoirai.github-release" version "2.2.12"
    id "com.modrinth.minotaur" version "1.2.0"
}


allprojects {
    tasks.withType(JavaCompile).configureEach {

        //apply plugin: "architectury-plugin"

        def targetVersion = 8
        sourceCompatibility = JavaVersion.toVersion(targetVersion)
        targetCompatibility = JavaVersion.toVersion(targetVersion)

        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true	//deprecated warning on compile
        repositories {
            mavenCentral()
        }
        dependencies {
            // put common dependencies here
            compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
        }
    }

}


//---------------- Publishing ----------------

boolean isRelease = true;
String changes = "for changelog see [commit history](https://github.com/KosmX/emotes/commits/development)"


import com.modrinth.minotaur.TaskModrinthUpload
import com.modrinth.minotaur.request.VersionType


if(file("keys.properties").exists()) {
    println("Keys file is exists, loading publish scripts")
    file("keys.properties").withReader {
        Properties props = new Properties()
        props.load(it)
        project.ext.keys = props
    }

    task publishModrinth(type: TaskModrinthUpload) {
        if(isRelease){
            versionType = VersionType.RELEASE
        }
        else{
            versionType = VersionType.BETA
        }
        token = project.keys.modrinth_token;
        // Get the GitHub Access Token you got from the basics part of this tutorial.
        projectId = "pZ2wrerK" // Enter your modrinth mod ID here.
        //System.out.println("Enter the version number:");
        versionNumber = "${project.mod_version}"
        versionName = "${project.mod_version}"
        uploadFile = "bukkit/build/libs/emotecraft-${project.mod_version}-bukkit.jar"
        additionalFiles = ["fabric/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-fabric.jar",
                           "forge/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-forge.jar"]
        //uploadFile = tasks.fabric.remapJar
        //System.out.println("Enter the game version number: (See minotaur docs for valids)");
        addGameVersion(project.minecraft_version);
        changelog = changes;
        addLoader("fabric")
        addLoader("forge")
        failSilently = false
    }


    githubRelease {
        token project.keys.github_token // This is your personal access token with Repo permissions
        // You get this from your user settings > developer settings > Personal Access Tokens
        owner "KosmX"
        // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
        repo "emotes" // by default this is set to your project name
        tagName project.mod_version // by default this is set to "v${project.version}"
        targetCommitish "development" // by default this is set to "master"
        releaseName "Emotecraft-${project.mod_version}" // Release title, by default this is the same as the tagName
        body changes // by default this is empty
        draft false // by default this is false
        prerelease !isRelease // by default this is false
        releaseAssets {
            files("fabric/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-fabric.jar",
                    "fabric/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-fabric-dev.jar",
                    "forge/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-forge.jar",
                    "forge/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-forge-dev.jar",
                    "bukkit/build/libs/emotecraft-${project.mod_version}-bukkit.jar")
        }
        // this points to which files you want to upload as assets with your release
        //releaseAssets jar.destinationDir.listFiles
        overwrite true // by default false; if set to true, will delete an existing release with the same tag and name
        dryRun false // by default false; you can use this to see what actions would be taken without making a release
        apiEndpoint "https://api.github.com" // should only change for github enterprise users
        client // This is the okhttp client used for http requests
    }

    curseforge {
        apiKey = project.keys.curseforge_key

        project {
            id = '397809' //Fabric version
            changelogType = "markdown"
            //changelog = '[See on Github](https://github.com/KosmX/emotes/commits/master)'
            changelog = changes
            if(isRelease){
                releaseType = "release"
            }
            else{
                releaseType = "beta"
            }
            addGameVersion project.minecraft_version
            addGameVersion "Fabric"
            addGameVersion "Java 8"
            addGameVersion "Java 9"
            addGameVersion "Java 10"


            relations {
                requiredDependency 'fabric-api'
                embeddedLibrary 'modmenu'
                //optionalDependency 'perspective-mod-redux'
            }

            options {
                forgeGradleIntegration = false // FABRIC MOD
            }

            mainArtifact("fabric/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-fabric.jar") {
                //displayName = archivesBaseName
            }
        }
        project {
            id = '403422' //Forge version
            changelogType = "markdown"
            //changelog = '[See on Github](https://github.com/KosmX/emotes/commits/master)'
            changelog = changes
            if(isRelease){
                releaseType = "release"
            }
            else{
                releaseType = "beta"
            }
            addGameVersion project.minecraft_version
            addGameVersion "Forge"
            addGameVersion "Java 8"
            addGameVersion "Java 9"
            addGameVersion "Java 10"


            options {
                forgeGradleIntegration = false // ForgeJunk MOD
            }

            mainArtifact("forge/build/libs/emotecraft-for-MC${project.minecraft_version}-${project.mod_version}-forge.jar") {
                //displayName = archivesBaseName
            }
        }



    }

    task autoPublish {
        dependsOn(':fabric:build', ':forge:build', ':bukkit:build')
        finalizedBy(tasks.githubRelease)
        finalizedBy(publishModrinth)
        finalizedBy(tasks.curseforge)
    }
}
else {
    println("Keys file is not exists publishing is not possible")
}
